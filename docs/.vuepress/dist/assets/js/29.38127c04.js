(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{462:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("p",[t._v("最近很想写写MySQL相关的内容，就从这个话题出发吧")]),t._v(" "),a("p",[t._v("有人说删MySQL表谁不会")]),t._v(" "),a("p",[t._v("不就是")]),t._v(" "),t._m(0),a("p",[t._v("如果在生产环境中，你对一张TB级别的大表，敲下这行命令")]),t._v(" "),a("p",[t._v("那么你的主管，大主管，隔壁的大主管 就会气势汹汹的冲向你")]),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("这就导致，这个时候所有关于MySQL的操作全部堵在队列中")]),t._v(" "),a("p",[t._v("如果在白天，那QPS曲线跌零可是很好看的")]),t._v(" "),a("p",[t._v("当然有些不辞辛苦的DBA会选择，大晚上爬起来删表")]),t._v(" "),a("p",[a("font",{attrs:{color:"#DC143C"}},[t._v("先说结论: 先用ln建立硬链接，再drop表，最后用truncate删除索引文件")])],1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),a("p",[t._v("那么什么是事务？")]),t._v(" "),a("p",[t._v("事务就是一件事，一堆SQL组")]),t._v(" "),a("p",[t._v("这些SQL要么一起完成，要么一个都不做, 它是一个不可分割的工作单位")]),t._v(" "),a("p",[t._v("事务是并发控制的基本单位，保证了数据的完整")]),t._v(" "),a("p",[t._v("事务满足著名的ACID条件")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),a("p",[t._v("在my.cnf中，有这么一条配置")]),t._v(" "),t._m(37),a("p",[t._v("查看表空间状态，用下面的命令")]),t._v(" "),t._m(38),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),a("p",[t._v("在数据库bigtest中，有一个表，名为TABLENAME，执行下列命令")]),t._v(" "),t._m(44),a("p",[t._v("现在TABLENAME.ibd文件太大，导致删表的时候过慢")]),t._v(" "),a("p",[t._v("那么如何解决这个问题呢，就需要使用硬链接对同一文件再建立一次索引")]),t._v(" "),a("p",[t._v("这个时候drop掉TABLENAME.ibd文件，那就是秒级")]),t._v(" "),a("p",[t._v("因为FS查询该文件还有一个索引，就不会真正的删除这张表，而只是删除这个索引")]),t._v(" "),t._m(45),a("p",[t._v("此时drop表，就会瞬间结束")]),t._v(" "),t._m(46),t._m(47),t._v(" "),a("p",[t._v("这个时候已经把表删了 MySQL里面已经没有这张表了 但磁盘并没有释放")]),t._v(" "),a("p",[t._v("磁盘里还有那个TABLENAME.ibd.tmp大文件，于是问题转换为如何删除一个大文件而不引起大IO")]),t._v(" "),a("p",[t._v("同样这个时候不能用rm命令，用了的话磁盘IO开销飙高, CPU打满，ssh都连不上了，那么恭喜你又有🍵喝了")]),t._v(" "),a("p",[t._v("那用什么呢")]),t._v(" "),t._m(48),t._v(" "),a("p",[t._v("其实有两个truncate, 一个是Linux下FS对文件操作的命令，一个是MySQL中对表操作的命令")]),t._v(" "),t._m(49),t._v(" "),a("p",[t._v("truncate 和其字面意思一致，截断")]),t._v(" "),a("p",[t._v("把文件截断成指定大小(注意: 可以是放大也可以是缩小)")]),t._v(" "),a("p",[t._v("附上truncate的Linux源码，其基本思路就是三次释放间接块，截取inode")]),t._v(" "),t._m(50),t._v(" "),a("p",[t._v("truncate操作则是对inode的所有块进行释放，最后设置其大小为0")]),t._v(" "),t._m(51),t._m(52),t._v(" "),a("p",[t._v("一般说Sql的truncate会把它和drop，delete放在一起对比")]),t._v(" "),a("p",[t._v("我们知道MySQL有一系列的日志用于保护数据")]),t._v(" "),a("p",[t._v("尤其是对于写操作，除了传统的transaction log，另外还有binlog")]),t._v(" "),a("p",[t._v("这一些log日志都是在操作的同时进行书写的")]),t._v(" "),t._m(53),t._v(" "),a("p",[t._v("truncate操作时，把所有数据删除，仅把表结构记录到transition log中，很明显这种操作较难恢复，但耗时较少 DDL")]),t._v(" "),a("p",[t._v("drop表的时候，就跟直接，把表数据和表结构都删除了 DDL")]),t._v(" "),a("p",[t._v("drop和truncate想要恢复也是可以的但不是通过rollback，而是通过解析binlog文件")]),t._v(" "),t._m(54),t._v(" "),t._m(55),t._v(" "),a("p",[t._v("把空字符重定向到文件中，但IO高，io会跌零")]),t._v(" "),t._m(56),t._m(57),t._v(" "),a("p",[t._v("把true值重定向到文件中")]),t._v(" "),t._m(58),t._m(59),t._v(" "),t._m(60),t._m(61),t._v(" "),t._m(62),t._m(63),t._v(" "),a("p",[t._v("Truncate文件截断在HDFS上的表现其实是block的截断。传入目标文件，与目标保留的长度(此长度应小于文件原大小)")]),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://draveness.me/mysql-transaction",target:"_blank",rel:"noopener noreferrer"}},[t._v("『浅入深出』MySQL 中事务的实现"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.runoob.com/mysql/mysql-transaction.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL 事务"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://dbarobin.com/2015/01/15/solution-of-droping-large-table-under-mysql/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL Drop 大表解决方案"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://xiaorui.cc/2016/12/08/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AEinnodb%E4%BD%BF%E7%94%A8%E4%BA%BF%E7%BA%A7%E5%A4%A7%E8%A1%A8/",target:"_blank",rel:"noopener noreferrer"}},[t._v("为什么不建议innodb使用亿级大表"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zybuluo.com/phper/note/78781",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL存储引擎中的MyISAM和InnoDB"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.voidcn.com/article/p-xuukgblc-gu.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SQL中删除整张表信息TRUNCATE 和DELETE性能比较"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://serverfault.com/questions/480526/deleting-very-large-file-without-webserver-freezing",target:"_blank",rel:"noopener noreferrer"}},[t._v("Deleting very large file without webserver freezing"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://serverfault.com/questions/366324/linux-server-out-of-space/366327#366327",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux server out of space"),a("OutboundLink")],1)])])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[this._v("drop")]),this._v(" "),s("span",{attrs:{class:"token keyword"}},[this._v("table")]),this._v(" TABLENAME\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("其原因是因为当开始Drop表的时候，因为"),s("code",[this._v("Innodb")]),this._v("支持事务，为保持一致性，会维护一个全局锁")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"innodb-myisam"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#innodb-myisam","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("code",[this._v("Innodb")]),this._v(" - "),s("code",[this._v("MyISAM")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("目前一般MySQL引擎使用的是"),s("code",[this._v("Innodb")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("其最大的特点就是支持事务，虽然"),s("code",[this._v("Select")]),this._v("性能比"),s("code",[this._v("MyISAM")]),this._v("弱一点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务","aria-hidden":"true"}},[this._v("#")]),this._v(" 事务")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[s("code",[this._v("原子性")]),this._v(": 在学习事务时，经常有人会告诉你，事务就是一系列的操作，要么全部都执行，要都不执行，这其实就是对事务原子性的刻画；虽然事务具有原子性，但是原子性并不是只与事务有关系，它的身影在很多地方都会出现")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("ul",[s("li",[this._v("如果操作并不具有原子性，并且可以再分为多个操作，当这些操作出现错误或抛出异常时，整个操作就可能不会继续执行下去，而已经进行的操作造成的副作用就可能造成数据更新的丢失或者错误")]),this._v(" "),s("li",[this._v("其难点在于并行事务的原子性处理")]),this._v(" "),s("li",[this._v("MySQL 使用"),s("code",[this._v("回滚日志undo log")]),this._v("实现事务的原子性")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"2"}},[s("li",[s("code",[this._v("一致性")]),this._v(": 在事务开始之前和事务结束以后，数据库的完整性没有被破坏")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("ul",[s("li",[this._v("其实除了ACID的一致性，CAP原则中也有一个一致性")]),this._v(" "),s("li",[this._v("CAP中的一致性指的是分布式系统中的各个节点中对于同一数据的拷贝有着相同的值")]),this._v(" "),s("li",[this._v("ACID中一致性指的是数据库的规则，如果 schema 中规定了一个值必须是唯一的，那么一致的系统必须确保在所有的操作中，该值都是唯一的")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"3"}},[s("li",[s("code",[this._v("隔离性")]),this._v(": 数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("blockquote",[a("ul",[a("li",[a("code",[t._v("RAED UNCOMMITED")]),t._v(": 使用查询语句不会加锁，可能会读到未提交的行"),a("code",[t._v("Dirty Read")])]),t._v(" "),a("li",[a("code",[t._v("READ COMMITED")]),t._v(": 只对记录加记录锁，而不会在记录之间加间隙锁，所以允许新的记录插入到被锁定记录的附近，所以再多次使用查询语句时，可能得到不同的结果"),a("code",[t._v("Non-Repeatable Read")])]),t._v(" "),a("li",[a("code",[t._v("REPEATABLE READ")]),t._v(": 多次读取同一范围的数据会返回第一次查询的快照，不会返回不同的数据行，但是可能发生幻读"),a("code",[t._v("Phantom Read")])]),t._v(" "),a("li",[a("code",[t._v("SERIALIZABLE")]),t._v(": InnoDB 隐式地将全部的查询语句加上共享锁，解决了幻读的问题")]),t._v(" "),a("li",[t._v("Mysql的隔离性通过共享锁Shared、互斥锁Exclusive、时间戳、version等手段实现")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"4"}},[s("li",[s("code",[this._v("持久性")]),this._v(": 既然是数据库，那么一定对数据的持久存储有着非常强烈的需求，如果数据被写入到数据库中，那么数据一定能够被安全存储在磁盘上；而事务的持久性就体现在，一旦事务被提交，那么数据一定会被写入到数据库中并持久存储起来")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("ul",[s("li",[this._v("MySQL 使用"),s("code",[this._v("重做日志redo log")]),this._v("实现事务的持久性")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"其他区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他区别","aria-hidden":"true"}},[this._v("#")]),this._v(" 其他区别")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("储存结构")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("blockquote",[a("p",[a("code",[t._v("MyISAM")]),t._v("：每个"),a("code",[t._v("MyISAM")]),t._v("在磁盘上存储成三个文件。第一个文件的名字以表的名字开始，扩展名指出文件类型。.frm文件存储表定义。数据文件的扩展名为.MYD (MYData)。索引文件的扩展名是.MYI (MYIndex)。"),a("br"),t._v(" "),a("code",[t._v("InnoDB")]),t._v("：所有的表都保存在同一个数据文件中（也可能是多个文件，或者是独立的表空间文件), "),a("code",[t._v("InnoDB")]),t._v("表的大小只受限于操作系统文件的大小，一般为2GB")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"2"}},[s("li",[this._v("存储空间")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("MyISAM")]),this._v("：可被压缩，存储空间较小。支持三种不同的存储格式：静态表、动态表、压缩表"),s("br"),this._v(" "),s("code",[this._v("InnoDB")]),this._v("：需要更多的内存和存储，它会在主内存中建立其专用的缓冲池用于高速缓冲数据和索引")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"3"}},[s("li",[this._v("可移植性、备份及恢复")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("MyISAM")]),this._v("：数据是以文件的形式存储，所以在跨平台的数据转移中会很方便。在备份和恢复时可单独针对某个表进行操作"),s("br"),this._v(" "),s("code",[this._v("InnoDB")]),this._v("：免费的方案可以是拷贝数据文件、备份"),s("code",[this._v("binlog")]),this._v("，或者用 mysqldump，在数据量达到几十G的时候就相对痛苦了")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"4"}},[s("li",[this._v("AUTO_INCREMENT")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("MyISAM")]),this._v("：可以和其他字段一起建立联合索引。引擎的自动增长列必须是索引，如果是组合索引，自动增长可以不是第一列，他可以根据前面几列进行排序后递增"),s("br"),this._v(" "),s("code",[this._v("InnoDB")]),this._v("："),s("code",[this._v("InnoDB")]),this._v("中必须包含只有该字段的索引。引擎的自动增长列必须是索引，如果是组合索引也必须是组合索引的第一列")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"5"}},[s("li",[this._v("表锁差异")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("blockquote",[a("p",[a("code",[t._v("MyISAM")]),t._v("：只支持表级锁，用户在操作"),a("code",[t._v("myisam")]),t._v("表时，select，update，delete，insert语句都会给表自动加锁，如果加锁以后的表满足insert并发的情况下，可以在表的尾部插入新的数据"),a("br"),t._v(" "),a("code",[t._v("InnoDB")]),t._v("：支持事务和行级锁，是"),a("code",[t._v("innodb")]),t._v("的"),a("code",[t._v("最大特色")]),t._v("。行锁大幅度提高了多用户并发操作的新能。但是"),a("code",[t._v("InnoDB")]),t._v("的行锁，只是在WHERE的主键是有效的，非主键的WHERE都会锁全表的")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"6"}},[s("li",[this._v("全文索引")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("MyISAM")]),this._v("：支持 FULLTEXT类型的全文索引"),s("br"),this._v(" "),s("code",[this._v("InnoDB")]),this._v("：不支持FULLTEXT类型的全文索引，但是"),s("code",[this._v("innodb")]),this._v("可以使用sphinx插件支持全文索引，并且效果更好")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"7"}},[s("li",[this._v("表主键")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("MyISAM")]),this._v("：允许没有任何索引和主键的表存在，索引都是保存行的地址"),s("br"),this._v(" "),s("code",[this._v("InnoDB")]),this._v("：如果没有设定主键或者非空唯一索引，就会自动生成一个6字节的主键(用户不可见)，数据是主索引的一部分，附加索引保存的是主索引的值")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"8"}},[s("li",[this._v("表的具体行数")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("blockquote",[a("p",[a("code",[t._v("MyISAM")]),t._v("：保存有表的总行数，如果"),a("code",[t._v("select count(*) from table;")]),t._v("会直接取出出该值"),a("br"),t._v(" "),a("code",[t._v("InnoDB")]),t._v("：没有保存表的总行数，如果使用"),a("code",[t._v("select count(*) from table;")]),t._v("就会遍历整个表，消耗相当大，但是在加了wehre条件后，"),a("code",[t._v("myisam")]),t._v("和"),a("code",[t._v("innodb")]),t._v("处理的方式都一样")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"9"}},[s("li",[this._v("CURD操作")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("blockquote",[a("p",[a("code",[t._v("MyISAM")]),t._v("：如果执行大量的SELECT，"),a("code",[t._v("MyISAM")]),t._v("是更好的选择"),a("br"),t._v(" "),a("code",[t._v("InnoDB")]),t._v("：如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用"),a("code",[t._v("InnoDB")]),t._v("表。DELETE 从性能上"),a("code",[t._v("InnoDB")]),t._v("更优，但DELETE FROM table时，"),a("code",[t._v("InnoDB")]),t._v("不会重新建立表，而是一行一行的删除，在"),a("code",[t._v("innodb")]),t._v("上如果要清空保存有大量数据的表，最好使用truncate table这个命令")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"10"}},[s("li",[this._v("外键")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("code",[this._v("MyISAM")]),this._v("：不支持"),s("br"),this._v(" "),s("code",[this._v("InnoDB")]),this._v("：支持")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"开启独立表空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开启独立表空间","aria-hidden":"true"}},[this._v("#")]),this._v(" 开启独立表空间")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("MySQL5.6.7之后会默认开启"),s("code",[this._v("独立表空间")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-vim extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vim"}},[s("code",[this._v("innodb_file_per_table "),s("span",{attrs:{class:"token operator"}},[this._v("=")]),this._v(" "),s("span",{attrs:{class:"token number"}},[this._v("1")]),this._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("mysql"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("show")]),t._v(" variables "),a("span",{attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'%per_table'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token comment"}},[t._v("-----------------------+-------+")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Variable_name         "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("Value")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token comment"}},[t._v("-----------------------+-------+")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" innodb_file_per_table "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("ON")]),t._v("    "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token comment"}},[t._v("-----------------------+-------+")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("blockquote",[a("p",[t._v("如果"),a("code",[t._v("innodb_file_per_table")]),t._v("的value值为"),a("code",[t._v("OFF")]),t._v("，代表采用的是共享表空间。"),a("br"),t._v("\n如果"),a("code",[t._v("innodb_file_per_table")]),t._v("的value值为"),a("code",[t._v("ON")]),t._v("，代表采用的是独立表空间")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"共享表-独立表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#共享表-独立表","aria-hidden":"true"}},[this._v("#")]),this._v(" 共享表 - 独立表")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("p",[t._v("共享表空间：某一个数据库的所有的表数据，索引文件全部放在一个文件中，默认这个共享表空间的文件路径在data目录下")]),t._v(" "),a("ul",[a("li",[t._v("默认的文件名为:ibdata1(此文件，可以扩展成多个)。注意，在这种方式下，运维超级不方便。你看，所有数据都在一个文件里，要对单表维护，十分不方便。另外，你在做delete操作的时候，文件内会留下很多间隙，ibdata1文件不会自动收缩。换句话说，使用共享表空间来存储数据，会遭遇drop table之后，空间无法释放的问题。")])])]),t._v(" "),a("li",[a("p",[t._v("独立表空间:每一个表都以独立方式来部署，每个表都有一个.frm表描述文件，还有一个.ibd文件。")]),t._v(" "),a("ul",[a("li",[t._v(".frm文件：保存了每个表的元数据，包括表结构的定义等，该文件与数据库引擎无关。")]),t._v(" "),a("li",[t._v(".ibd文件：保存了每个表的数据和索引的文件。")]),t._v(" "),a("li",[t._v("注意，在这种方式下，每个表都有自已独立的表空间，这样运维起来方便，可以实现单表在不同数据库之间的移动。另外，在执行drop table操作的时候，是可以自动回收表空间。在执行delete操作后，可以通过执行alter table TableName engine=innodb语句来整理碎片，回收部分表空间")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"硬链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#硬链接","aria-hidden":"true"}},[this._v("#")]),this._v(" 硬链接")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("假设，"),s("code",[this._v("datadir = /data/mysql/")]),this._v(", 另外，有一个database,名为bigtest")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("mysql"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" system ls "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("l "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token keyword"}},[t._v("data")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("bigtest"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("\n\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("rw"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("r"),a("span",{attrs:{class:"token comment"}},[t._v("----- 1 mysql mysql          9023  8 18 11:32 TABLENAME.frm")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("rw"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("r"),a("span",{attrs:{class:"token comment"}},[t._v("----- 1 mysql mysql 2356792000512  8 18 11:32 TABLENAME.ibd")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("mysql"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" system ln "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token keyword"}},[t._v("data")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("bigtest"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("TABLENAME"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ibd "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token keyword"}},[t._v("data")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("bigtest"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("TABLENAME"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ibd"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tmp\n\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("rw"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("r"),a("span",{attrs:{class:"token comment"}},[t._v("----- 1 mysql mysql          9023  8 18 11:32 TABLENAME.frm")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("rw"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("r"),a("span",{attrs:{class:"token comment"}},[t._v("----- 2 mysql mysql 2356792000512  8 18 11:32 TABLENAME.ibd")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("rw"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("r"),a("span",{attrs:{class:"token comment"}},[t._v("----- 2 mysql mysql 2356792000512  8 18 11:32 TABLENAME.ibd.tmp")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("mysql"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("drop")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("table")]),t._v(" erp"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nQuery OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("rows")]),t._v(" affected "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1.03")]),t._v(" sec"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"truncate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#truncate","aria-hidden":"true"}},[this._v("#")]),this._v(" truncate")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("答案是"),s("code",[this._v("truncate")]),this._v("（其实还有其他一些方法, 但对IO影响都比较大）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"fs的truncate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fs的truncate","aria-hidden":"true"}},[this._v("#")]),this._v(" FS的truncate")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("直接块，就是i_zone中相应保存的就直接是inode所使用的磁盘块")]),t._v(" "),a("li",[t._v("一级间接块，顾名思义，i_zone指明的块中存放的不是普通数据，而是块号\n"),a("ul",[a("li",[t._v("因此对一级间接块的释放操作就是读取一级间接块，遍历其中每一个块调用free_block进行释放")])])]),t._v(" "),a("li",[t._v("二级间接块就是i_zone中存储的是一级间接块的块号\n"),a("ul",[a("li",[t._v("对于二级间接块读取一级间接块后就可以转换为对一级间接块的释放操作")])])]),t._v(" "),a("li",[t._v("同理，三级间接块i_zone存储的就是二级间接块的块号，所以释放三级间接块就需要三次递归")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("/*\n * linux/fs/truncate.c\n *\n * (C) 1991 Linus Torvalds\n */")]),t._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("<linux/sched.h>")]),t._v("  ")]),a("span",{attrs:{class:"token comment"}},[t._v("// 调度程序头文件，定义了任务结构task_struct、初始任务0 的数据，")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 还有一些有关描述符参数设置和获取的嵌入式汇编函数宏语句。")]),t._v("\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("<sys/stat.h>")]),t._v("  ")]),a("span",{attrs:{class:"token comment"}},[t._v("// 文件状态头文件。含有文件或文件系统状态结构stat{}和常量。")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 释放一次间接块。")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("free_ind")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" dev"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" block"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" buffer_head "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("bh"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("short")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("block"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 如果逻辑块号为0，则返回。")]),t._v("\n\n  "),a("span",{attrs:{class:"token comment"}},[t._v("// 读取一次间接块，并释放其上表明使用的所有逻辑块，然后释放该一次间接块的缓冲区。")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bh "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("bread")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dev"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" block"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    p "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("short")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("bh"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("b_data"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 指向数据缓冲区。")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("512")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 每个逻辑块上可有512 个块号。")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("free_block")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dev"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 释放指定的逻辑块。")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("brelse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bh"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                     "),a("span",{attrs:{class:"token comment"}},[t._v("// 释放缓冲区。")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("free_block")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dev"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" block"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 释放设备上的一次间接块。")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 释放二次间接块。")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("free_dind")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" dev"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" block"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" buffer_head "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("bh"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("short")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("block"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 如果逻辑块号为0，则返回。")]),t._v("\n\n  "),a("span",{attrs:{class:"token comment"}},[t._v("// 读取二次间接块的一级块，并释放其上表明使用的所有逻辑块，然后释放该一级块的缓冲区。")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bh "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("bread")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dev"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" block"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    p "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("short")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("bh"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("b_data"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 指向数据缓冲区。")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("512")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 每个逻辑块上可连接512 个二级块。")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("free_ind")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dev"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 释放所有一次间接块。")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("brelse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bh"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                   "),a("span",{attrs:{class:"token comment"}},[t._v("// 释放缓冲区。")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{attrs:{class:"token function"}},[t._v("free_block")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dev"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" block"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 最后释放设备上的二次间接块。")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 将节点对应的文件长度截为0，并释放占用的设备空间。")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("truncate")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" m_inode "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("inode"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 如果不是常规文件或者是目录文件，则返回。")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S_ISREG "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_mode"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" S_ISDIR "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_mode"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 释放i 节点的7 个直接逻辑块，并将这7 个逻辑块项全置零。")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("7")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_zone"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 如果块号不为0，则释放之。")]),t._v("\n      free_block "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_dev"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_zone"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_zone"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  free_ind "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_dev"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_zone"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("7")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 释放一次间接块。")]),t._v("\n  free_dind "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_dev"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_zone"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("8")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 释放二次间接块。")]),t._v("\n  inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_zone"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("7")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_zone"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("8")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("// 逻辑块项7、8 置零。")]),t._v("\n  inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_size "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{attrs:{class:"token comment"}},[t._v("// 文件大小置零。")]),t._v("\n  inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_dirt "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{attrs:{class:"token comment"}},[t._v("// 置节点已修改标志。")]),t._v("\n  inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_mtime "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" inode"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("i_ctime "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CURRENT_TIME"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 重置文件和节点修改时间为当前时间。")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"sql的truncate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql的truncate","aria-hidden":"true"}},[this._v("#")]),this._v(" SQL的truncate")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("delete操作时，会把每条数据标记为"),s("code",[this._v("已删除")]),this._v("，不可避免的导致了操作十分耗时，且实际上空间并没有被释放 DML")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"其他方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 其他方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[s("code",[this._v("重定向")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[t._v("$ "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("bigtest"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("TABLENAME"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("ibd"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("tmp\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"2"}},[s("li",[s("code",[this._v(":")]),this._v("/"),s("code",[this._v("true")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[t._v("$ "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("bigtest"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("TABLENAME"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("ibd"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("tmp\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"3"}},[s("li",[s("code",[this._v("/dev/null")]),this._v("/"),s("code",[this._v("dd")]),this._v("/"),s("code",[this._v("cp")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("cat")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("dev"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("null "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" access"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("log\n"),a("span",{attrs:{class:"token keyword"}},[t._v("cp")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("dev"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("null access"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("log\ndd "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("dev"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("null of"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("access"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("log\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"4"}},[s("li",[s("code",[this._v("echo")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[t._v("echo "),a("span",{attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" access"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("log\necho "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" access"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("log\necho "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token keyword"}},[t._v("n")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" access"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("log\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"hdfs-truncate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hdfs-truncate","aria-hidden":"true"}},[this._v("#")]),this._v(" HDFS truncate")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("允许用户移除意外写入的数据")]),this._v(" "),s("li",[this._v("当写事务发生失败的时候，可以进行回滚，回到之前写入成功的事务状态")]),this._v(" "),s("li",[this._v("有能力移除一次失败的写操作而写入的不完整的数据")]),this._v(" "),s("li",[this._v("提升HDFS对于其它文件系统的支持度")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("定位到新的截取长度所对应的块，然后把后面多余的块从此文件中进行移除;")]),this._v(" "),s("li",[this._v("找到新长度所对应的block块之后，计算此块内部需要移除的偏移量，然后进行删除;")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考")])}],!1,null,null,null);e.options.__file="truncate.md";s.default=e.exports}}]);