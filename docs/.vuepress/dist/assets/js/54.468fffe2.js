(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{487:function(t,n,s){"use strict";s.r(n);var a=s(2),e=Object(a.a)({},function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("github地址："),s("a",{attrs:{href:"https://github.com/iofu728/PAT-A-by-iofu728",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/iofu728/PAT-A-by-iofu728"),s("OutboundLink")],1),s("br"),t._v("\n难度：☆☆☆"),s("br"),t._v("\n关键词：字符串")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("选择n个字符串的最长公共后缀")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7)])},[function(){var t=this.$createElement,n=this._self._c||t;return n("h1",{attrs:{id:"_1077-kuchiguse-20-☆"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1077-kuchiguse-20-☆","aria-hidden":"true"}},[this._v("#")]),this._v(" 1077 Kuchiguse 20 ☆")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"题目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#题目","aria-hidden":"true"}},[this._v("#")]),this._v(" 题目")])},function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("blockquote",[s("p",[t._v("1077 Kuchiguse（20）"),s("br"),t._v('\nThe Japanese language is notorious for its sentence ending particles. Personal preference of such particles can be considered as a reflection of the speaker\'s personality. Such a preference is called "Kuchiguse" and is often exaggerated artistically in Anime and Manga. For example, the artificial sentence ending particle '),s("code",[t._v('"nyan~"')]),t._v(" is often used as a stereotype for characters with a cat-like personality:")]),t._v(" "),s("p",[s("code",[t._v("Itai nyan~ (It hurts, nyan~)")])]),t._v(" "),s("p",[s("code",[t._v("Ninjin wa iyada nyan~ (I hate carrots, nyan~)")])]),t._v(" "),s("p",[t._v("Now given a few lines spoken by the same character, can you find her Kuchiguse?")]),t._v(" "),s("p",[t._v("Input Specification:"),s("br"),t._v("\nEach input file contains one test case. For each case, the first line is an integer "),s("code",[t._v("N")]),t._v(" (2≤N≤100). Following are N file lines of 0"),s("code",[t._v("~")]),t._v("256 (inclusive) characters in length, each representing a character's spoken line. The spoken lines are case sensitive.")]),t._v(" "),s("p",[t._v("Output Specification:"),s("br"),t._v("\nFor each test case, print in one line the kuchiguse of the character, i.e., the longest common suffix of all "),s("code",[t._v("N")]),t._v(" lines. If there is no such suffix, write nai.")]),t._v(" "),s("p",[t._v("Sample Input 1:"),s("br"),t._v("\n3"),s("br"),t._v("\nItai nyan~"),s("br"),t._v("\nNinjin wa iyadanyan~"),s("br"),t._v("\nuhhh nyan~"),s("br"),t._v("\nSample Output 1:"),s("br"),t._v("\nnyan~"),s("br"),t._v("\nSample Input 2:"),s("br"),t._v("\n3"),s("br"),t._v("\nItai!"),s("br"),t._v("\nNinjinnwaiyada T_T"),s("br"),t._v("\nT_T"),s("br"),t._v("\nSample Output 2:")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"大意"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#大意","aria-hidden":"true"}},[this._v("#")]),this._v(" 大意")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#思路","aria-hidden":"true"}},[this._v("#")]),this._v(" 思路")])},function(){var t=this.$createElement,n=this._self._c||t;return n("ol",[n("li",[this._v("为处理后缀,最好对字符串进行"),n("code",[this._v("reverse")])]),this._v(" "),n("li",[this._v("一个个字符串遍历下来,不同,就截断")]),this._v(" "),n("li",[this._v("利用cin接着用getline时候注意中间的\\n要用getchar()过滤掉；")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"code"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#code","aria-hidden":"true"}},[this._v("#")]),this._v(" code")])},function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{attrs:{class:"token macro property"}},[t._v("#"),s("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("<algorithm>")])]),t._v("\n"),s("span",{attrs:{class:"token macro property"}},[t._v("#"),s("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("main")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  cin "),s("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v(" n"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("getchar")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  string common"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    string s"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token function"}},[t._v("getline")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cin"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token function"}},[t._v("reverse")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("begin")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("end")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" length "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("min")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("length")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" common"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("length")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" length"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v("j"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("common"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" s"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          common "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" common"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("substr")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{attrs:{class:"token keyword"}},[t._v("break")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      common "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("reverse")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("common"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("begin")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" common"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("end")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("common"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("length")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" common "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"nai"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  cout "),s("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" common"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])}],!1,null,null,null);e.options.__file="1077.md";n.default=e.exports}}]);