(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{453:function(t,e,s){"use strict";s.r(e);var n=s(2),r=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("那为何nohup可以实现这个功能呢")]),t._v(" "),s("p",[t._v("Ps:这篇可能会比较硬，写(chao)的时候也是头疼的很，感谢山川dalao的"),s("a",{attrs:{href:"http://note.youdao.com/noteshare?id=c08e1ced9ac5b3d48aa819d65c802c37",target:"_blank",rel:"noopener noreferrer"}},[t._v("解惑文档"),s("OutboundLink")],1)]),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("在讲之前，我们需要对Linux的信号处理体系有一点了解")]),t._v(" "),t._m(2),t._v(" "),s("p",[t._v("Signal是进程间通信机制中唯一的异步通信机制。")]),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("信号可分为"),s("a",{attrs:{href:"https://www.ibm.com/developerworks/cn/linux/l-ipc/part2/index1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("可靠、不可靠，实时、非实时"),s("OutboundLink")],1),t._v("。其主要区别是Unix与后来改进版Linux信号的差别。")]),t._v(" "),s("p",[t._v("进程对信号的响应可分为"),s("a",{attrs:{href:"https://www.ibm.com/developerworks/cn/linux/l-ipc/part2/index1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("忽略、捕捉、缺省"),s("OutboundLink")],1),t._v("三种。")]),t._v(" "),s("p",[t._v("发送信号的主要函数有："),s("a",{attrs:{href:"https://www.ibm.com/developerworks/cn/linux/l-ipc/part2/index1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("kill()、raise()、 sigqueue()、alarm()、setitimer()以及abort()"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("每种信号用一个整型常量宏表示，以SIG开头，比如SIGCHLD、SIGINT等，它们在系统头文件中定义。")]),t._v(" "),s("p",[t._v("内核中针对每一个进程都有一张表来保存信号。")]),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("每个信号在进程中注册都会把信号值加入到进程的未决信号集。")]),t._v(" "),s("p",[t._v("当内核需要将信号传递给某个进程时，就在该进程对应的表中写入信号，这样就生成了信号。")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("当该进程由用户态陷入内核态，再次切换到用户态之前，会查看表中的信号。如果有信号，进程就会首先执行信号对应的操作，此时叫做执行信号。")]),t._v(" "),s("p",[t._v("从生成信号到将信号传递给对应进程这段时间，信号处于等待状态。")]),t._v(" "),s("p",[t._v("我们可以编写代码，让进程阻塞block某些信号，也就是让这些信号始终处于等待的状态，直到进程取消阻塞unblock或者忽略信号。")]),t._v(" "),t._m(7),t._v(" "),s("p",[t._v("在远程主机上，有两个相关的进程：")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),s("p",[t._v("首先得明白sshd过程")]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),s("p",[t._v("那么为什么ssh这边的客户端关了之后，服务器运行的命令会关闭呢？")]),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),s("p",[t._v("当然 这个 最好别"),s("font",{attrs:{color:"#DC143C",size:"5"}},[t._v("作死")]),t._v("去试")],1),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),s("p",[t._v("如果 我们 起命令的时候忘记加nohup或者setsid，然后还想忽略SIGNHUP，只能通过作业调度和 disown 来解决问题了")]),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),s("p",[t._v("如果有大量这种命令需要在稳定的后台里运行，如何避免对每条命令都做这样的操作呢？")]),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),s("p",[t._v("当然还可以把bash封装成一个服务运行在Linux上")]),t._v(" "),t._m(47),t._v(" "),s("p",[t._v(". "),s("a",{attrs:{href:"http://note.youdao.com/noteshare?id=c08e1ced9ac5b3d48aa819d65c802c37",target:"_blank",rel:"noopener noreferrer"}},[t._v("Paramiko"),s("OutboundLink")],1),s("br"),t._v("\n. "),s("a",{attrs:{href:"https://stackoverflow.com/questions/32384148/why-does-running-a-background-task-over-ssh-fail-if-a-pseudo-tty-is-allocated",target:"_blank",rel:"noopener noreferrer"}},[t._v("Why does running a background task over ssh fail if a pseudo-tty is allocated?"),s("OutboundLink")],1),s("br"),t._v("\n. "),s("a",{attrs:{href:"https://unix.stackexchange.com/questions/39605/ssh-command-unexpectedly-continues-on-other-system-after-ssh-terminates",target:"_blank",rel:"noopener noreferrer"}},[t._v("ssh command unexpectedly continues on other system after ssh terminates"),s("OutboundLink")],1),s("br"),t._v("\n. "),s("a",{attrs:{href:"https://unix.stackexchange.com/questions/6332/what-causes-various-signals-to-be-sent/6337#6337",target:"_blank",rel:"noopener noreferrer"}},[t._v("What causes various signals to be sent?"),s("OutboundLink")],1),s("br"),t._v("\n. "),s("a",{attrs:{href:"http://man7.org/linux/man-pages/man7/signal.7.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SIGNAL(7)"),s("OutboundLink")],1),s("br"),t._v("\n. "),s("a",{attrs:{href:"https://www.ibm.com/developerworks/cn/linux/l-cn-nohup/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux 技巧：让进程在后台可靠运行的几种方法"),s("OutboundLink")],1),s("br"),t._v("\n. "),s("a",{attrs:{href:"https://www.ibm.com/developerworks/cn/linux/l-ipc/part2/index1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux环境进程间通信"),s("OutboundLink")],1),s("br"),t._v("\n. "),s("a",{attrs:{href:"http://gityuan.com/2015/12/20/signal/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux信号(signal)机制"),s("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("nohup")]),this._v(" = "),e("code",[this._v("no hang up")]),e("br"),this._v("\n作用在当用户从终端页面退出时，程序任务仍可以保持运行")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"signal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#signal","aria-hidden":"true"}},[this._v("#")]),this._v(" signal")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("Signal是在一种软件体系下对中断的模拟，所以也被称为软中断。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("与其他进程间通信方式（管道pipeline、共享内存等）相比，信号所能传递的信息比较粗糙，只是一个整数。"),e("br"),this._v("\n但正是由于传递的信息量少，信号也便于使用和管理，可以用于系统管理相关的任务，例如通知进程终结、中止或者恢复等。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在进程"),e("code",[this._v("task_struct")]),this._v("结构体中有一个未决信号的成员变量"),e("code",[this._v("struct sigpending pending")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("非实时信号发送给进程时，如果该信息已经在进程中注册过，不会再次注册，故信号会丢失；")]),this._v(" "),e("li",[this._v("实时信号发送给进程时，不管该信号是否在进程中注册过，都会再次注册。故信号不会丢失；")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("信号在从"),e("code",[this._v("内核态")]),this._v("切换至"),e("code",[this._v("用户态")]),this._v("时，进行处理。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"processes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#processes","aria-hidden":"true"}},[this._v("#")]),this._v(" processes")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("ssh守护进程（sshd）的一个实例，它将远程程序的输入和输出中继到本地终端;")]),this._v(" "),e("li",[this._v("进程组，用于维护各种bash命令(bash也是一个进程);")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("每个进程属于一个进程组\n"),s("ul",[s("li",[t._v("同组中的进程作为一个命令管道的一部分，例如"),s("code",[t._v("cat file | sort | grep 'word'")]),t._v("将放置在运行"),s("code",[t._v("cat(1)，sort(1), grep(1)")]),t._v("的进程组里")])])]),t._v(" "),s("li",[t._v("bash也是一个进程，也属于一个进程组")]),t._v(" "),s("li",[t._v("进程组是会话的一部分, 会话由一个或多个进程组组成")]),t._v(" "),s("li",[t._v("在会话中，最多有一个进程组，称为前台进程组，可能还有许多后台进程组")]),t._v(" "),s("li",[t._v("bash将进程从后台移动到前台，从前台移动到后台通过tcsetpgrp(3)")]),t._v(" "),s("li",[t._v("发送到进程组的信号将传递到该组中的每个进程。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"some-concept"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#some-concept","aria-hidden":"true"}},[this._v("#")]),this._v(" some concept")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[s("code",[t._v("tty")]),t._v(": 终端设备，Teletypes, 电传打字机")]),t._v(" "),s("li",[s("code",[t._v("pty")]),t._v(": 伪终端，虚拟终端")]),t._v(" "),s("li",[s("code",[t._v("pts/ptmx")]),t._v(": pts=pseudo-terminal slave, ptmx=pseudo-terminal master, 对master的操作会反映到slave上")]),t._v(" "),s("li",[s("code",[t._v("/dev/ttySn")]),t._v(": 串行端口终端。计算机把每个串行端口都看作是一个字符设备")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("例如，echo test > /dev/ttyS1会把单词”test”发送到连接在ttyS1（COM2）端口的设备上")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"5"}},[e("li",[e("code",[this._v("/dev/pty")]),this._v(": 伪终端是成对的逻辑终端设备，例如/dev/ptyp3和/dev/ttyp3")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("例如，telnet连接PC，则telnet程序会连接到设备ptyp2(m2)上。此时一个getty程序就应该运行在对应的ttyp2(s2)端口上")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("当telnet从远端获取了一个字符时，该字符就会通过m2、s2传递给getty程序，而getty程序就会通过s2、m2和telnet程序往网络上返回”login:”字符串信息")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"6"}},[e("li",[e("code",[this._v("/dev/tty")]),this._v(": 控制终端，当前进程的控制终端的设备特殊文件，可以使用命令”ps –ax”来查看进程与哪个控制终端相连")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("shell中，/dev/tty就是使用的终端，设备号(5,0).使用命令”tty”可以查看它具体对应哪个实际终端设备")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"7"}},[e("li",[e("code",[this._v("/dev/ttyn")]),this._v(", /dev/console: 控制台终端")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"sshd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sshd","aria-hidden":"true"}},[this._v("#")]),this._v(" sshd")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("当sshd接收到shell命令，会创建一对pty("),e("code",[this._v("master pty")]),this._v(", "),e("code",[this._v("slave pty")]),this._v(").(不明白的参考上一节)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("sshd拥有"),e("code",[this._v("master pty")]),this._v("，那么shell会把"),e("code",[this._v("slave pty")]),this._v("作为shell程序的"),e("code",[this._v("stdin stdout stdeer")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("对应的ssh命令就是 "),e("code",[this._v("ssh -t root@ip ls")]),this._v("(对主要就是 "),e("code",[this._v("-t")]),this._v(")")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("如果不使用pty, 则sshd会使用pipe作为与shell的关联，shell会把"),e("code",[this._v("stdin stdout stderr")]),this._v("变为"),e("code",[this._v("pipe")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("那是因为如果ssh客户端关闭了，"),e("code",[this._v("sshd")]),this._v("可以感知的到，则服务器端会把"),e("code",[this._v("master pty")]),this._v("关闭。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("那么操作系统就会向"),e("code",[this._v("slave pty")]),this._v("发送"),e("code",[this._v("SIGNUP")]),this._v("信号，默认的信号处理方式就是终止")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("如果换成"),s("code",[t._v("pipe")]),t._v("，那么"),s("code",[t._v("sshd")]),t._v("也会关闭"),s("code",[t._v("pipe")]),t._v("的一端。如果此时客户端已经关闭，那么会收到一个"),s("code",[t._v("SIGNPIPE")]),t._v("信号，默认的处理函数是终止函数，所以只要程序不读写"),s("code",[t._v("stdin stdout stderr")]),t._v("那么不会退出")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"nohup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nohup","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("code",[this._v("nohup")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("再说说"),e("code",[this._v("nohup")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("nohup")]),t._v("的原理就是假装看不见"),s("code",[t._v("SIGNHUP")]),t._v("信号，同时把"),s("code",[t._v("stdin")]),t._v("重定向到"),s("code",[t._v("/dev/null")]),t._v(" 把"),s("code",[t._v("stdout")]),t._v(" "),s("code",[t._v("stderr")]),t._v(" 重定向到"),s("code",[t._v("nohup.out")]),t._v("(重定向地址可以更改)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("但是如果ssh是使用"),e("code",[this._v("pipe")]),this._v("方式的, 使用nohup发现没有效果，"),e("code",[this._v("stdin")]),this._v("还是"),e("code",[this._v("pipe")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("那是因为"),s("code",[t._v("nohup")]),t._v("里面会对原有的"),s("code",[t._v("stdin")]),t._v(" 做判断，只有是"),s("code",[t._v("istty")]),t._v(" 才会把"),s("code",[t._v("stdin stdout stderr")]),t._v("替换掉")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token function"}},[this._v("nohup")]),this._v(" "),e("span",{attrs:{class:"token function"}},[this._v("command")]),this._v(" "),e("span",{attrs:{class:"token operator"}},[this._v("&")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"setsid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setsid","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("code",[this._v("setsid")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("换个角度思考，如果我们的进程不属于接受"),e("code",[this._v("SIGNHUP")]),this._v("信号的终端的子进程，那么自然也就不会受到 HUP 信号的影响了")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("setsid")]),this._v(" 就是利用这一点")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("setsid "),e("span",{attrs:{class:"token function"}},[this._v("command")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("code",[this._v("&")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v('如果把"&"放入“()”内之后，会发现所提交的job并不在jobs中,那么这样就能躲过'),e("code",[this._v("SIGNHUP")]),this._v("信号")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ping wyydsb.xin "),s("span",{attrs:{class:"token operator"}},[t._v("&")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$ "),s("span",{attrs:{class:"token function"}},[t._v("ps")]),t._v(" -ef "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),s("span",{attrs:{class:"token function"}},[t._v("grep")]),t._v(" wyydsb.xin\n  501 18420 18140   0  6:50PM ttys003    0:00.02 "),s("span",{attrs:{class:"token function"}},[t._v("watch")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://wyydsb.xin\n  501 18456 18140   0  6:51PM ttys003    0:00.23 "),s("span",{attrs:{class:"token function"}},[t._v("watch")]),t._v(" -n 5 "),s("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://wyydsb.xin\n  501 20519     1   0  8:46PM ttys005    0:00.01 "),s("span",{attrs:{class:"token function"}},[t._v("ping")]),t._v(" wyydsb.xin\n  501 20598 20528   0  8:47PM ttys008    0:00.00 "),s("span",{attrs:{class:"token function"}},[t._v("grep")]),t._v(" --color"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("auto --exclude-dir"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(".bzr --exclude-dir"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("CVS --exclude-dir"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(".git --exclude-dir"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(".hg --exclude-dir"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(".svn wyydsb.xin\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("因为"),e("code",[this._v("PID=1")]),this._v("的是内核进程")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("然后启起来 你就发现"),e("code",[this._v("kill")]),this._v("不了 只能 重启了")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"disown"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#disown","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("code",[this._v("disown")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("code",[t._v("disown -h jobspec")]),t._v("来使某个作业忽略"),s("code",[t._v("SIGNHUP")]),t._v("信号")]),t._v(" "),s("li",[s("code",[t._v("disown -ah")]),t._v(" 来使所有的作业都忽略"),s("code",[t._v("SIGNHUP")]),t._v("信号")]),t._v(" "),s("li",[s("code",[t._v("disown -rh")]),t._v("来使正在运行的作业忽略"),s("code",[t._v("SIGNHUP")]),t._v("信号")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"screen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#screen","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("code",[this._v("screen")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("code",[t._v("screen -dmS session name")]),t._v(" 建立一个处于断开模式下的会话（并指定其会话名）")]),t._v(" "),s("li",[s("code",[t._v("screen -list")]),t._v("  列出所有会话")]),t._v(" "),s("li",[s("code",[t._v("screen -r session name")]),t._v(" 重新连接指定会话")]),t._v(" "),s("li",[t._v("快捷键"),s("code",[t._v("CTRL-a d")]),t._v(" 暂时断开当前会话")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"systemd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#systemd","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("code",[this._v("systemd")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考")])}],!1,null,null,null);r.options.__file="nohup.md";e.default=r.exports}}]);