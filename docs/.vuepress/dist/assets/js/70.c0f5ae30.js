(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{503:function(t,e,r){"use strict";r.r(e);var s=r(2),_=Object(s.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),r("p",[t._v("排队模拟问题，是建立在实际叫号排队问题基础上的，算法分析问题。")]),t._v(" "),t._m(1),t._v(" "),r("p",[t._v("拿到这个问题一开始博主也是懵逼的，")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),r("p",[t._v("具体code 可以参见 本博客的"),r("router-link",{attrs:{to:"/pat/1026.html"}},[t._v("PAT A 1026")]),t._v(", "),r("router-link",{attrs:{to:"/pat/1014.html"}},[t._v("PAT A 1014")]),t._v(" 和 "),r("router-link",{attrs:{to:"/pat/1017.html"}},[t._v("PAT A 1017")]),r("br"),t._v("\ngithub地址：https://github.com/iofu728/PAT-A-by-iofu728")],1)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"排队模拟问题分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#排队模拟问题分析","aria-hidden":"true"}},[this._v("#")]),this._v(" 排队模拟问题分析")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("本质上是一种随时间变动的"),e("code",[this._v("queue")]),this._v("问题。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"第一个问题，我们从什么角度复现这个过程，到底是时间还是什么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一个问题，我们从什么角度复现这个过程，到底是时间还是什么？","aria-hidden":"true"}},[this._v("#")]),this._v(" 第一个问题，我们从什么角度复现这个过程，到底是时间还是什么？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("首先"),e("code",[this._v("变量很多")]),this._v("，顾客到达时间，窗口数，队列数，顾客办业务花费时间，等待时间，"),e("br"),this._v("\n看起来要考虑的要素很多。"),e("br"),this._v("\n但我们仔细分析，所有事件都是基于时间在变化的基础上进行的，"),e("br"),this._v("\n从8点开始，随着时间的推进，顾客做相应的进队，出队操作。"),e("br"),this._v("\n但是如何使用时间判断是否可以进队、出队。好像很困难。")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("p",[t._v("可以换一种思路，所有事件的发生是"),r("code",[t._v("时间变化导致")]),t._v("的，"),r("br"),t._v("\n但同时也是一个个"),r("code",[t._v("客户导致")]),t._v("的，"),r("br"),t._v("\n一个客户办完业务，下一个才能补上，才有进队、出队这种变化。"),r("br"),t._v("\n想明白这一点之后，问题就简单多了，我们可以利用遍历客户来实现整个问题的复现。"),r("br"),t._v("\n对于1014问题可以先遍历队列区，再遍历叫号区。"),r("br"),t._v("\n对于1017问题，队列长度只有一，可以通过依次遍历来访客户，来实现复现。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"第二个问题，怎么确定最佳补队方案？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二个问题，怎么确定最佳补队方案？","aria-hidden":"true"}},[this._v("#")]),this._v(" 第二个问题，怎么确定最佳补队方案？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("当队首客户办完业务的时候，叫号区队首的客户就可以进入该队，该队最早有空位，故该队是最佳选择。"),e("br"),this._v("\n这种想法，是从队列出发，通过遍历"),e("code",[this._v("队首元素结束时间")]),this._v("来实现。"),e("br"),this._v("\n实际操作过程中可以通过设立窗口队列数组vector node中存放相应的队首结束时间，利用sort函数来实现队首最早出队的遍历。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"第三个问题：如何确定排队是否还有希望完成业务办理？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三个问题：如何确定排队是否还有希望完成业务办理？","aria-hidden":"true"}},[this._v("#")]),this._v(" 第三个问题：如何确定排队是否还有希望完成业务办理？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这个问题好像很现实，也是我们日常生活中经常会碰到的问题。"),e("br"),this._v("\n借助问题二的思路，遍历队首可以找到最佳选队策略。"),e("br"),this._v("\n遍历队伍结束时间，那么就可以得到新入队用户有无希望完成任务的判断。"),e("br"),this._v("\n在实际操作过程中，可以通过在问题二队首出队的同时，对队伍有无希望进行判断。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("解决了这三个问题，排队模拟问题基本上就解决了，"),e("br"),this._v("\n虽然具体操作过程中，用到的数组会多的让人心烦，momo")])}],!1,null,null,null);_.options.__file="sort.md";e.default=_.exports}}]);